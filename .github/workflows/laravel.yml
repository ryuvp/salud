name: Deploy to Production

on:
  push:
    branches:
      - main  # Se ejecutará cuando haya un push en la rama main

jobs:
  build:
    runs-on: ubuntu-latest  # Utilizamos un runner de GitHub con Ubuntu

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # - name: Set up PHP
    #   uses: shivammathur/setup-php@v2
    #   with:
    #     php-version: '8.1'  # Configura PHP 8.1 (puedes ajustarlo si es necesario)
    #     extensions: mbstring, bcmath, curl, zip, gd  # Extensiones necesarias para Laravel

    # - name: Set up Node.js 20.12.2
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: '20.12.2'  # Configura Node.js 20.12.2

    # - name: Install Composer dependencies
    #   run: |
    #     curl -sS https://getcomposer.org/installer | php
    #     php composer.phar install --no-dev --optimize-autoloader  # Instala dependencias sin las de desarrollo

    # - name: Install npm dependencies and build assets
    #   run: |
    #     npm install
    #     npm run build  # Compila los activos de Laravel con Vite o Mix

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
          host: ${{ secrets.SERVER_HOST }}  # Dirección IP o dominio del servidor
          username: ${{ secrets.SERVER_USER }}  # Usuario SSH (ej. deploy_user)
          key: ${{ secrets.DEPLOY_SSH_KEY }}  # Clave privada SSH
          port: 22  # Puerto SSH (predeterminado: 22)
          script: |
            echo "Conexión SSH exitosa"
            # Sincronizar archivos al servidor
            rsync -avz --delete --exclude='.git*' --exclude='node_modules' ./salud/ /var/www/renopac/

